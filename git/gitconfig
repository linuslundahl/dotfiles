[user]
	name = Linus Lundahl
	email = lundahl.linus@gmail.com

[core]
	editor = atom-beta
	excludesfile = ~/.gitignore
	quotepath = false

[github]
	user = linuslundahl

[alias]
	cleanup  = "!f() { git branch --merged | grep -v '*' | xargs -n 1 git branch -d; }; f"
	lg       = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
	lg2      = !git --no-pager log -40 --graph --abbrev-commit --color --decorate --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	lgs      = shortlog -sn
	m        = checkout master
	d        = checkout develop
	ksreview = "!f() { local SHA=${1:-HEAD}; local BRANCH=${2:-master}; if [ $SHA == $BRANCH ]; then SHA=HEAD; fi; git difftool -y -t Kaleidoscope $BRANCH...$SHA; }; f"
	ksshow   = "!sh -c 'SHA=${1:-HEAD}; git difftool -y -t Kaleidoscope $SHA^..$SHA;' -"
	ksdiff   = difftool -y -t Kaleidoscope
	ssh      = !git-ssh $1
	latest   = for-each-ref --count=30 --sort=-committerdate refs/heads/ --format='%(refname:short)'
	recap    = log --since=\"00:00:00\" --no-merges --oneline --author=<lundahl.linus@gmail.com>

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta
	plain = white bold
	old = red bold
	new = green bold
	commit = yellow bold
	func = green dim
	#plain = white bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool]
	prompt = false

[diff]
	tool = Kaleidoscope

[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true

[mergetool]
	prompt = false

[merge]
	tool = Kaleidoscope

[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
